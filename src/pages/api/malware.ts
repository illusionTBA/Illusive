import type { NextApiRequest, NextApiResponse } from 'next'

const APIKey = 'AIzaSyCh155Wja0k23vM0w5ghR6TXiPAsD-H9EQ';
const URL = `https://safebrowsing.googleapis.com/v4/threatMatches:find?key=${APIKey}`;

import fetch from 'node-fetch';
import { parse } from 'querystring';

const body = (e) => ({
    "threatInfo": {
        "threatTypes": ["MALWARE","SOCIAL_ENGINEERING"],
        "platformTypes": ["ALL_PLATFORMS"],
        "threatEntryTypes": ["URL"],
        "threatEntries": [
            {"url": String(e)},
        ]
    }
})


const get = (body) => new Promise(r=>fetch(URL, {method: 'POST', headers: {'content-type': 'application/json'}, body: JSON.stringify(body)}).then(e=>e.json()).then(r))

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse<Data>
) {
  
    var parsed = (parse(req.url.split('?')[1]));

    var url = parsed['url'];

    if (!url) return res.end('URL Required (?url=*)')

    var send = body(url);
    var fetched = await get(send);

    res.status(200).json((fetched))
}
